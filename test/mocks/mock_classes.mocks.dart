// Mocks generated by Mockito 5.4.4 from annotations
// in peak/test/mocks/mock_classes.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:peak/models/exercise_model.dart' as _i8;
import 'package:peak/models/user_model.dart' as _i6;
import 'package:peak/models/workout_session_model.dart' as _i10;
import 'package:peak/repositories/ExerciseRepository.dart' as _i7;
import 'package:peak/repositories/UserRepository.dart' as _i4;
import 'package:peak/repositories/WorkoutSessionRepository.dart' as _i9;
import 'package:peak/services/cache_manager/cache_manager.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CustomCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomCacheManager extends _i1.Mock
    implements _i2.CustomCacheManager {
  MockCustomCacheManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> cacheData(
    String? key,
    String? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheData,
          [
            key,
            data,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<dynamic> getCachedData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getCachedData,
          [key],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  dynamic deleteCache(String? peakUserKey) =>
      super.noSuchMethod(Invocation.method(
        #deleteCache,
        [peakUserKey],
      ));
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i4.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get peakUserKey => (super.noSuchMethod(
        Invocation.getter(#peakUserKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#peakUserKey),
        ),
      ) as String);

  @override
  _i3.Future<_i6.PeakUser?> fetchUser() => (super.noSuchMethod(
        Invocation.method(
          #fetchUser,
          [],
        ),
        returnValue: _i3.Future<_i6.PeakUser?>.value(),
      ) as _i3.Future<_i6.PeakUser?>);

  @override
  _i3.Future<bool> saveUser(_i6.PeakUser? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updateUserValue(
    _i6.PeakUser? user,
    _i6.PUEnum? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserValue,
          [
            user,
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> insertUser(_i6.PeakUser? userInfo) => (super.noSuchMethod(
        Invocation.method(
          #insertUser,
          [userInfo],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ExerciseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockExerciseRepository extends _i1.Mock
    implements _i7.ExerciseRepository {
  MockExerciseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get defaultExerciseKey => (super.noSuchMethod(
        Invocation.getter(#defaultExerciseKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#defaultExerciseKey),
        ),
      ) as String);

  @override
  String get customExerciseKey => (super.noSuchMethod(
        Invocation.getter(#customExerciseKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#customExerciseKey),
        ),
      ) as String);

  @override
  _i3.Future<List<_i8.Exercise>> fetchExercises() => (super.noSuchMethod(
        Invocation.method(
          #fetchExercises,
          [],
        ),
        returnValue: _i3.Future<List<_i8.Exercise>>.value(<_i8.Exercise>[]),
      ) as _i3.Future<List<_i8.Exercise>>);

  @override
  _i3.Future<bool> saveExercise(_i8.Exercise? exercise) => (super.noSuchMethod(
        Invocation.method(
          #saveExercise,
          [exercise],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [WorkoutSessionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutSessionRepository extends _i1.Mock
    implements _i9.WorkoutSessionRepository {
  MockWorkoutSessionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get peakUserKey => (super.noSuchMethod(
        Invocation.getter(#peakUserKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#peakUserKey),
        ),
      ) as String);

  @override
  _i3.Future<bool> saveWorkoutSession(_i10.WorkoutSession? workoutSession) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkoutSession,
          [workoutSession],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
