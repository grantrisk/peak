name: PR Build, Format Check, and Test

on:
  pull_request:
    branches:
      - main

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1.2

      - name: Check if Dart files are formatted
        run: dart format --output=none --set-exit-if-changed .

      - name: Check if other files are formatted according to Prettier
        run: npx prettier --check .

  build-and-test-android:
    needs: check-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup .env file
        run: |
          cp .env.template .env
          sed -i 's/ANDROID_FIREBASE_API_KEY=/${{ secrets.ANDROID_FIREBASE_API_KEY }}/g' .env
          sed -i 's/ANDROID_FIREBASE_APP_ID=/${{ secrets.ANDROID_FIREBASE_APP_ID }}/g' .env
          sed -i 's/IOS_FIREBASE_API_KEY=/${{ secrets.IOS_FIREBASE_API_KEY }}/g' .env
          sed -i 's/IOS_FIREBASE_APP_ID=/${{ secrets.IOS_FIREBASE_APP_ID }}/g' .env
          sed -i 's/FIREBASE_MESSAGING_SENDER_ID=/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' .env
          sed -i 's/FIREBASE_PROJECT_ID=/${{ secrets.FIREBASE_PROJECT_ID }}/g' .env
          sed -i 's/FIREBASE_STORAGE_BUCKET=/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' .env
          sed -i 's/IOS_BUNDLE_ID=/${{ secrets.IOS_BUNDLE_ID }}/g' .env

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build APK
        run: flutter build apk
