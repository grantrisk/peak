name: PR Build and Test

on:
  pull_request:
    branches:
      - main

jobs:
  wait-for-check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Check Format workflow to succeed
        uses: explorium-ai/wait-github-status-action@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Check Format" # The name of the job or workflow you're waiting for
          sha: ${{ github.event.pull_request.head.sha }} # The commit SHA that triggered the workflow

  build-and-test-android:
    needs: wait-for-check-format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Copy .env.template to .env and replace placeholders
      - name: Setup .env file
        run: |
          cp .env.template .env
          sed -i 's/ANDROID_FIREBASE_API_KEY=/${{ secrets.ANDROID_FIREBASE_API_KEY }}/g' .env
          sed -i 's/ANDROID_FIREBASE_APP_ID=/${{ secrets.ANDROID_FIREBASE_APP_ID }}/g' .env
          sed -i 's/IOS_FIREBASE_API_KEY=/${{ secrets.IOS_FIREBASE_API_KEY }}/g' .env
          sed -i 's/IOS_FIREBASE_APP_ID=/${{ secrets.IOS_FIREBASE_APP_ID }}/g' .env
          sed -i 's/FIREBASE_MESSAGING_SENDER_ID=/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' .env
          sed -i 's/FIREBASE_PROJECT_ID=/${{ secrets.FIREBASE_PROJECT_ID }}/g' .env
          sed -i 's/FIREBASE_STORAGE_BUCKET=/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' .env
          sed -i 's/IOS_BUNDLE_ID=/${{ secrets.IOS_BUNDLE_ID }}/g' .env

      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk
#  Commenting out the iOS build and test job because of github actions minutes limit. IOS has a multiplier of 10 per minute
#  build-and-test-ios:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: "stable"
#
#      # Copy .env.template to .env and replace placeholders
#      - name: Setup .env file
#        run: |
#          cp .env.template .env
#          sed -i '' 's/ANDROID_FIREBASE_API_KEY=/${{ secrets.ANDROID_FIREBASE_API_KEY }}/g' .env
#          sed -i '' 's/ANDROID_FIREBASE_APP_ID=/${{ secrets.ANDROID_FIREBASE_APP_ID }}/g' .env
#          sed -i '' 's/IOS_FIREBASE_API_KEY=/${{ secrets.IOS_FIREBASE_API_KEY }}/g' .env
#          sed -i '' 's/IOS_FIREBASE_APP_ID=/${{ secrets.IOS_FIREBASE_APP_ID }}/g' .env
#          sed -i '' 's/FIREBASE_MESSAGING_SENDER_ID=/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' .env
#          sed -i '' 's/FIREBASE_PROJECT_ID=/${{ secrets.FIREBASE_PROJECT_ID }}/g' .env
#          sed -i '' 's/FIREBASE_STORAGE_BUCKET=/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' .env
#          sed -i '' 's/IOS_BUNDLE_ID=/${{ secrets.IOS_BUNDLE_ID }}/g' .env
#
#      - run: flutter pub get
#      - run: flutter test
#      - run: flutter build ios --no-codesign
