name: PR Build and Test

on:
  workflow_run:
    workflows: ["Check Format"]
    types:
      - completed

jobs:
  check-workflow-status:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check-conclusion.outputs.should-run }}
    steps:
      - name: Fetch the conclusion of Check Format workflow
        id: check-conclusion
        uses: actions/github-script@v5
        with:
          script: |
            const { data: { workflow_runs } } = await github.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'Check Format.yml', // Use the exact file name or ID of the Check Format workflow
              branch: '${{ github.event.workflow_run.head_branch }}',
              event: 'pull_request'
            })
            const conclusion = workflow_runs[0] ? workflow_runs[0].conclusion : 'failure'
            const shouldRun = conclusion === 'success' ? 'true' : 'false'
            core.setOutput('should-run', shouldRun)

  build-and-test-android:
    needs: check-workflow-status
    if: needs.check-workflow-status.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Copy .env.template to .env and replace placeholders
      - name: Setup .env file
        run: |
          cp .env.template .env
          sed -i 's/ANDROID_FIREBASE_API_KEY=/${{ secrets.ANDROID_FIREBASE_API_KEY }}/g' .env
          sed -i 's/ANDROID_FIREBASE_APP_ID=/${{ secrets.ANDROID_FIREBASE_APP_ID }}/g' .env
          sed -i 's/IOS_FIREBASE_API_KEY=/${{ secrets.IOS_FIREBASE_API_KEY }}/g' .env
          sed -i 's/IOS_FIREBASE_APP_ID=/${{ secrets.IOS_FIREBASE_APP_ID }}/g' .env
          sed -i 's/FIREBASE_MESSAGING_SENDER_ID=/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' .env
          sed -i 's/FIREBASE_PROJECT_ID=/${{ secrets.FIREBASE_PROJECT_ID }}/g' .env
          sed -i 's/FIREBASE_STORAGE_BUCKET=/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' .env
          sed -i 's/IOS_BUNDLE_ID=/${{ secrets.IOS_BUNDLE_ID }}/g' .env

      - run: flutter pub get
      - run: flutter test
      - run: flutter build apk
#  Commenting out the iOS build and test job because of github actions minutes limit. IOS has a multiplier of 10 per minute
#  build-and-test-ios:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: "stable"
#
#      # Copy .env.template to .env and replace placeholders
#      - name: Setup .env file
#        run: |
#          cp .env.template .env
#          sed -i '' 's/ANDROID_FIREBASE_API_KEY=/${{ secrets.ANDROID_FIREBASE_API_KEY }}/g' .env
#          sed -i '' 's/ANDROID_FIREBASE_APP_ID=/${{ secrets.ANDROID_FIREBASE_APP_ID }}/g' .env
#          sed -i '' 's/IOS_FIREBASE_API_KEY=/${{ secrets.IOS_FIREBASE_API_KEY }}/g' .env
#          sed -i '' 's/IOS_FIREBASE_APP_ID=/${{ secrets.IOS_FIREBASE_APP_ID }}/g' .env
#          sed -i '' 's/FIREBASE_MESSAGING_SENDER_ID=/${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}/g' .env
#          sed -i '' 's/FIREBASE_PROJECT_ID=/${{ secrets.FIREBASE_PROJECT_ID }}/g' .env
#          sed -i '' 's/FIREBASE_STORAGE_BUCKET=/${{ secrets.FIREBASE_STORAGE_BUCKET }}/g' .env
#          sed -i '' 's/IOS_BUNDLE_ID=/${{ secrets.IOS_BUNDLE_ID }}/g' .env
#
#      - run: flutter pub get
#      - run: flutter test
#      - run: flutter build ios --no-codesign
